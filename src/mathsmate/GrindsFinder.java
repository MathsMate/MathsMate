/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathsmate;

import java.awt.CardLayout;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.util.ArrayList;

/**
 *
 * @author Aaron
 */
public class GrindsFinder extends javax.swing.JPanel {

    ArrayList<GrindInterface> grindList;
    InstitutionGrind i1 = new InstitutionGrind("School of Grinds", "dublinschoolofgrinds.ie", 500, 1865432457, 100, "Swords, Dublin");
    InstitutionGrind i2 = new InstitutionGrind("Independent Academy", "independentacademy.ie", 500, 328743523, 90, "Finglas, Dublin");
    InstitutionGrind i3 = new InstitutionGrind("Bray Grinds Institute", "braygrindsinstitute.com", 1000, 231267312, 20, "Bray, Wicklow");
    InstitutionGrind i4 = new InstitutionGrind("Ashfield College", "ashfieldcollege.ie", 500, 345934345, 50, "Finglas, Dublin");
    InstitutionGrind i5 = new InstitutionGrind("Bruce College", "brucecollege.ie", 1000, 1868345367, 30, "Swords, Dublin");

    PrivateGrind p1 = new PrivateGrind("John Jackson", "firsttutors.com", 500, 1538462654);
    PrivateGrind p2 = new PrivateGrind("Jack Johnson", "irish-grinds.com", 1000, 426466543);
    PrivateGrind p3 = new PrivateGrind("Billy O'Mahoney", "dublin-tuition.com", 500, 98332595);
    PrivateGrind p4 = new PrivateGrind("Rick Williamsom", "grindscentre.com", 500, 23322646);
    PrivateGrind p5 = new PrivateGrind("Mary Davidson", "grindsworld.com", 1000, 734336541);

    public GrindsFinder() {
        initComponents();
        
        searchBtn.setEnabled(false);
        grindList = new ArrayList<>();

        grindList.add(i1);
        grindList.add(i2);
        grindList.add(i3);
        grindList.add(i4);
        grindList.add(i5);

        grindList.add(p1);
        grindList.add(p2);
        grindList.add(p3);
        grindList.add(p4);
        grindList.add(p5);

        grindsPanel.setLayout(new GridLayout(grindList.size(), 0, 0, 5));
        for (int i = 0; i < grindList.size(); i++) {
            GrindPanel p = new GrindPanel();
            p.setName(grindList.get(i).getName());
            p.setPrice(grindList.get(i).getCost());
            p.setAddress(grindList.get(i).getAddress());
            p.setPhone(grindList.get(i).getPhone());
            p.setPlaces(grindList.get(i).getPlaces());
            p.setURL(grindList.get(i).getUrl());

            grindsPanel.add(p);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subjectGroup1 = new javax.swing.ButtonGroup();
        subjectGroup2 = new javax.swing.ButtonGroup();
        subjectGroup3 = new javax.swing.ButtonGroup();
        subjectGroup4 = new javax.swing.ButtonGroup();
        subjectGroup5 = new javax.swing.ButtonGroup();
        subjectGroup6 = new javax.swing.ButtonGroup();
        mainMenuPanel = new javax.swing.JPanel();
        resetBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        copyrightLbl = new javax.swing.JLabel();
        instituteFilterLbl = new javax.swing.JLabel();
        priceFilterLbl = new javax.swing.JLabel();
        addressFilterLbl = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        screenTitleLbl = new javax.swing.JLabel();
        nameBg = new javax.swing.JLabel();
        instituteTxtField = new javax.swing.JTextField();
        addressTxtField = new javax.swing.JTextField();
        priceTxtField = new javax.swing.JTextField();
        priceCheckBox = new javax.swing.JCheckBox();
        instituteCheckBox = new javax.swing.JCheckBox();
        addressCheckBox = new javax.swing.JCheckBox();
        grindsScrollPane = new javax.swing.JScrollPane();
        grindsPanel = new javax.swing.JPanel();

        mainMenuPanel.setBackground(new java.awt.Color(52, 152, 219));
        mainMenuPanel.setPreferredSize(new java.awt.Dimension(400, 640));
        mainMenuPanel.setLayout(null);

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        mainMenuPanel.add(resetBtn);
        resetBtn.setBounds(220, 160, 80, 23);

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        mainMenuPanel.add(searchBtn);
        searchBtn.setBounds(110, 160, 80, 23);

        copyrightLbl.setBackground(new java.awt.Color(255, 255, 255));
        copyrightLbl.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        copyrightLbl.setForeground(new java.awt.Color(255, 255, 255));
        copyrightLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrightLbl.setText("Copyright Â© 2015 | Maths Mate");
        copyrightLbl.setAlignmentY(0.0F);
        mainMenuPanel.add(copyrightLbl);
        copyrightLbl.setBounds(30, 580, 340, 30);

        instituteFilterLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        instituteFilterLbl.setForeground(new java.awt.Color(255, 255, 255));
        instituteFilterLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        instituteFilterLbl.setText("Name Filter:");
        mainMenuPanel.add(instituteFilterLbl);
        instituteFilterLbl.setBounds(20, 130, 120, 20);

        priceFilterLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceFilterLbl.setForeground(new java.awt.Color(255, 255, 255));
        priceFilterLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        priceFilterLbl.setText("Price Filter:");
        mainMenuPanel.add(priceFilterLbl);
        priceFilterLbl.setBounds(20, 100, 120, 20);

        addressFilterLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addressFilterLbl.setForeground(new java.awt.Color(255, 255, 255));
        addressFilterLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressFilterLbl.setText("Address Filter:");
        mainMenuPanel.add(addressFilterLbl);
        addressFilterLbl.setBounds(20, 70, 120, 20);

        homeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mathsmate/homeIcon.png"))); // NOI18N
        homeBtn.setAlignmentY(0.0F);
        homeBtn.setBorderPainted(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeBtn.setMaximumSize(new java.awt.Dimension(100, 100));
        homeBtn.setMinimumSize(new java.awt.Dimension(100, 100));
        homeBtn.setPreferredSize(new java.awt.Dimension(100, 100));
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        mainMenuPanel.add(homeBtn);
        homeBtn.setBounds(300, 10, 80, 50);

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mathsmate/backIcon.png"))); // NOI18N
        backBtn.setAlignmentY(0.0F);
        backBtn.setBorderPainted(false);
        backBtn.setContentAreaFilled(false);
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.setMaximumSize(new java.awt.Dimension(100, 100));
        backBtn.setMinimumSize(new java.awt.Dimension(100, 100));
        backBtn.setPreferredSize(new java.awt.Dimension(100, 100));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        mainMenuPanel.add(backBtn);
        backBtn.setBounds(20, 10, 80, 50);

        screenTitleLbl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        screenTitleLbl.setForeground(new java.awt.Color(255, 255, 255));
        screenTitleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        screenTitleLbl.setText("Grinds Finder");
        mainMenuPanel.add(screenTitleLbl);
        screenTitleLbl.setBounds(110, 10, 180, 50);

        nameBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mathsmate/nameIcon.png"))); // NOI18N
        nameBg.setText("hello");
        mainMenuPanel.add(nameBg);
        nameBg.setBounds(90, 10, 220, 50);

        instituteTxtField.setEditable(false);
        mainMenuPanel.add(instituteTxtField);
        instituteTxtField.setBounds(150, 130, 200, 20);

        addressTxtField.setEditable(false);
        mainMenuPanel.add(addressTxtField);
        addressTxtField.setBounds(150, 70, 200, 20);

        priceTxtField.setEditable(false);
        mainMenuPanel.add(priceTxtField);
        priceTxtField.setBounds(150, 100, 200, 20);

        priceCheckBox.setContentAreaFilled(false);
        priceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceCheckBoxActionPerformed(evt);
            }
        });
        mainMenuPanel.add(priceCheckBox);
        priceCheckBox.setBounds(360, 100, 21, 21);

        instituteCheckBox.setContentAreaFilled(false);
        instituteCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instituteCheckBoxActionPerformed(evt);
            }
        });
        mainMenuPanel.add(instituteCheckBox);
        instituteCheckBox.setBounds(360, 130, 21, 21);

        addressCheckBox.setContentAreaFilled(false);
        addressCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressCheckBoxActionPerformed(evt);
            }
        });
        mainMenuPanel.add(addressCheckBox);
        addressCheckBox.setBounds(360, 70, 20, 21);

        grindsScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        grindsScrollPane.setForeground(new java.awt.Color(255, 255, 255));
        grindsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        grindsPanel.setBackground(new java.awt.Color(52, 152, 219));
        grindsPanel.setLayout(new java.awt.GridLayout(1, 0));
        grindsScrollPane.setViewportView(grindsPanel);

        mainMenuPanel.add(grindsScrollPane);
        grindsScrollPane.setBounds(10, 200, 380, 380);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "EXTRAS_MENU");
        }
    }//GEN-LAST:event_backBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "MAIN");
        }
    }//GEN-LAST:event_homeBtnActionPerformed

    private void priceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceCheckBoxActionPerformed
        priceTxtField.setEditable(priceCheckBox.isSelected());
        checkSearchBtn();
    }//GEN-LAST:event_priceCheckBoxActionPerformed

    private void instituteCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instituteCheckBoxActionPerformed
        instituteTxtField.setEditable(instituteCheckBox.isSelected());
        checkSearchBtn();
    }//GEN-LAST:event_instituteCheckBoxActionPerformed

    private void addressCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressCheckBoxActionPerformed
        addressTxtField.setEditable(addressCheckBox.isSelected());
        checkSearchBtn();
    }//GEN-LAST:event_addressCheckBoxActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        ArrayList<GrindInterface> show = new ArrayList<>();
        if (instituteTxtField.isEditable() && priceTxtField.isEditable() && addressTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getName().equalsIgnoreCase(instituteTxtField.getText()) && grindList.get(i).getCost() == Integer.parseInt(priceTxtField.getText()) && grindList.get(i).getAddress().equalsIgnoreCase(addressTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (instituteTxtField.isEditable() && priceTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getName().equalsIgnoreCase(instituteTxtField.getText()) && grindList.get(i).getCost() == Integer.parseInt(priceTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (addressTxtField.isEditable() && instituteTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getName().equalsIgnoreCase(instituteTxtField.getText()) && grindList.get(i).getAddress().equalsIgnoreCase(addressTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (addressTxtField.isEditable() && priceTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getCost() == Integer.parseInt(priceTxtField.getText()) && grindList.get(i).getAddress().equalsIgnoreCase(addressTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (addressTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getAddress().equalsIgnoreCase(addressTxtField.getText())) {
                    show.add(grindList.get(i));
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (priceTxtField.isEditable()) {
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getCost() == Integer.parseInt(priceTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        } else if (instituteTxtField.isEditable()) {
            if (instituteTxtField.getText().equals("")) {
                grindsPanel.removeAll();
                for (int i = 0; i < grindList.size(); i++) {
                    GrindPanel p = new GrindPanel();
                    p.setName(grindList.get(i).getName());
                    p.setPrice(grindList.get(i).getCost());
                    p.setAddress(grindList.get(i).getAddress());
                    p.setPhone(grindList.get(i).getPhone());
                    p.setPlaces(grindList.get(i).getPlaces());
                    p.setURL(grindList.get(i).getUrl());

                    grindsPanel.add(p);
                    grindsPanel.updateUI();
                }
                return;
            }
            for (int i = 0; i < grindList.size(); i++) {
                if (grindList.get(i).getName().equalsIgnoreCase(instituteTxtField.getText())) {
                    if (!show.contains(grindList.get(i))) {
                        show.add(grindList.get(i));
                    }
                }
            }

            grindsPanel.removeAll();
            grindsPanel.updateUI();
            for (int i = 0; i < show.size(); i++) {
                GrindPanel p = new GrindPanel();
                p.setName(show.get(i).getName());
                p.setPrice(show.get(i).getCost());
                p.setAddress(show.get(i).getAddress());
                p.setPhone(show.get(i).getPhone());
                p.setPlaces(show.get(i).getPlaces());
                p.setURL(show.get(i).getUrl());

                grindsPanel.add(p);
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        grindsPanel.removeAll();
        for (int i = 0; i < grindList.size(); i++) {
            GrindPanel p = new GrindPanel();
            p.setName(grindList.get(i).getName());
            p.setPrice(grindList.get(i).getCost());
            p.setAddress(grindList.get(i).getAddress());
            p.setPhone(grindList.get(i).getPhone());
            p.setPlaces(grindList.get(i).getPlaces());
            p.setURL(grindList.get(i).getUrl());

            grindsPanel.add(p);
            grindsPanel.updateUI();
        }
    }//GEN-LAST:event_resetBtnActionPerformed

    private void checkSearchBtn() {
        if (!addressTxtField.isEditable() && !instituteTxtField.isEditable() && !priceTxtField.isEditable()) {
            searchBtn.setEnabled(false);
        } else {
            searchBtn.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addressCheckBox;
    private javax.swing.JLabel addressFilterLbl;
    private javax.swing.JTextField addressTxtField;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel copyrightLbl;
    private javax.swing.JPanel grindsPanel;
    private javax.swing.JScrollPane grindsScrollPane;
    private javax.swing.JButton homeBtn;
    private javax.swing.JCheckBox instituteCheckBox;
    private javax.swing.JLabel instituteFilterLbl;
    private javax.swing.JTextField instituteTxtField;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JLabel nameBg;
    private javax.swing.JCheckBox priceCheckBox;
    private javax.swing.JLabel priceFilterLbl;
    private javax.swing.JTextField priceTxtField;
    private javax.swing.JButton resetBtn;
    private javax.swing.JLabel screenTitleLbl;
    private javax.swing.JButton searchBtn;
    private javax.swing.ButtonGroup subjectGroup1;
    private javax.swing.ButtonGroup subjectGroup2;
    private javax.swing.ButtonGroup subjectGroup3;
    private javax.swing.ButtonGroup subjectGroup4;
    private javax.swing.ButtonGroup subjectGroup5;
    private javax.swing.ButtonGroup subjectGroup6;
    // End of variables declaration//GEN-END:variables

}
